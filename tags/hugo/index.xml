<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Billo Park</title>
    <link>https://blog.billo.io/tags/hugo/</link>
    <description>Recent content in hugo on Billo Park</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 23 Sep 2020 16:34:08 +0900</lastBuildDate><atom:link href="https://blog.billo.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo 블로그에 관련된 글 노출하기</title>
      <link>https://blog.billo.io/devposts/hugo_related_posts/</link>
      <pubDate>Wed, 23 Sep 2020 16:34:08 +0900</pubDate>
      
      <guid>https://blog.billo.io/devposts/hugo_related_posts/</guid>
      <description>네이버에 블로그를 사이트 등록하고, 사이트에 대한 분석을 읽어보았더니, 내부 링크 관리가 잘 안되고 있다고 적혀있었다. 이를 개선하기 위해서 블로그에 See Also 란을 새로 만들어보기로 결정했다. 내가 사용하고 있는 블로그 플랫폼은 Hugo라서, Hugo에서 연관 포스트를 노출하는 방법을 찾아보았다. Hugo에서는 Related Contents 라고 부르는 개념이었다. 개요는 간단했다. 노출할 연관된 글 목록 코드를 작성하고, 블로그 글에 해당되는 레이아웃에 원하는 위치에 해당 코드를 불러주는게 끝이였다. 관련된 설정은 config 파일에서 가능했다.
하나씩 확인해보면, 우선 연관된 글 을 보여줄 코드를 작성해야 한다.</description>
    </item>
    
    <item>
      <title>Github Pages &#43; Hugo를 사용한 블로그 구축기</title>
      <link>https://blog.billo.io/devposts/blog_github_page/</link>
      <pubDate>Sat, 23 Nov 2019 22:27:33 +0900</pubDate>
      
      <guid>https://blog.billo.io/devposts/blog_github_page/</guid>
      <description>Github Pages + Hugo로 결정하게 된 이유 개발 하면서 구글링을 하다보면 많은 개발블로그들을 만날 수 있다. 개발 블로그들을 보면서 필요성을 느끼고 나에게 어떤 종류의 블로그가 필요한지 고민해봤다. 내가 필요했던 조건은 2가지였는데,
관리를 따로 하지 않아도 될 만큼 수월할 것 커스터마이징이 쉽게 가능할 것 이었다.
우선, 첫번째 조건에 의해서 동적 사이트보다는 정적 사이트를 선호하게 되었다.
일반적으로 웹에서 쉽게 만나볼 수 있는 블로그들은 동적 사이트이다. 동적 사이트란, 사이트 내부에 DB가 존재해서 사이트를 접속하는 시점에 DB에 있는 정보를 읽어와서 접속 시점마다 내용이 다를 수 있는, 그런 형태의 사이트를 의미한다.</description>
    </item>
    
  </channel>
</rss>
