<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>validation on Billo Park</title>
    <link>https://blog.billo.io/tags/validation/</link>
    <description>Recent content in validation on Billo Park</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 16 Sep 2019 23:06:52 +0900</lastBuildDate>
    
	<atom:link href="https://blog.billo.io/tags/validation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang에서 Structure Validation하기</title>
      <link>https://blog.billo.io/devposts/go_struct_validation/</link>
      <pubDate>Mon, 16 Sep 2019 23:06:52 +0900</pubDate>
      
      <guid>https://blog.billo.io/devposts/go_struct_validation/</guid>
      <description>외부에서 Data Object를 받아오는 경우, 특히 신뢰할 수 없는 출처로부터 받아오는 경우에는 해당 Object에 대한 Validation작업이 필수적으로 요구된다. RESTful API를 구현한 Backend Server가 대표적인 예인데, 클라이언트에서 넘겨준 Object는 무조건 신뢰할 수 없는 정보로 간주하고 Validation을 해야 안전한 서버를 구현할 수 있다. 이를 위해, Golang에서도 struct 에 담긴 Data를 검증하는 다양한 방법이 존재한다.
 가장 Naive 하게 구현할 수 있는 방법은 해당 struct에 IsValid() 함수를 구현하는 방법이다. 예를 들어, 아래 형태의 struct를 사용한다고 가정 해 보자.</description>
    </item>
    
  </channel>
</rss>