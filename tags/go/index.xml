<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Billo Park</title>
    <link>https://blog.billo.io/tags/go/</link>
    <description>Recent content in go on Billo Park</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 12 Nov 2020 14:35:05 +0900</lastBuildDate>
    
	<atom:link href="https://blog.billo.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>스타 19k 받은 기술 문서 번역하기</title>
      <link>https://blog.billo.io/devposts/translate_dev_doc/</link>
      <pubDate>Thu, 12 Nov 2020 14:35:05 +0900</pubDate>
      
      <guid>https://blog.billo.io/devposts/translate_dev_doc/</guid>
      <description>go언어로 프로젝트를 구상하려고 하면 가장 먼저 막히는 부분은 프로젝트를 어떻게 구성해야 하지? 일 것이다. go언어는 정해진 프로젝트 구조가 없다. 어떻게 폴더 구조를 만들 것인지, 어떻게 패키지 구조를 구성할지는 Circular import를 하지 않는다면 아주 자유롭다. 자유롭다는 것은 항상 좋을 것 같지만 막상 직접 구조를 고민하다보면 꼭 좋은 것 만은 아니라는 것을 알 수 있다.
이럴 때 필요한 것이 레퍼런스. Go로 된 다른 프로젝트들의 구조를 찾아보면, 놀랍도록 다양하다는 것을 알 수 있다. 프로젝트의 root에 모든 파일을 다 늘어놓은 프로젝트부터, 나름대로 철학을 가지고 구조화한 프로젝트 까지 아주 다양하다.</description>
    </item>
    
    <item>
      <title>Golang 에서의 명명 규칙</title>
      <link>https://blog.billo.io/devposts/golang_naming_convention/</link>
      <pubDate>Tue, 08 Sep 2020 21:23:47 +0900</pubDate>
      
      <guid>https://blog.billo.io/devposts/golang_naming_convention/</guid>
      <description>무언가에 이름을 지을 때는 우리가 공통적으로 짓는 규칙들이 있다. 한국에서는 사람 이름을 대부분 세글자로 짓는다던지, 멍멍이와 같이 반려견의 이름으로 사용되는 것들은 피한다던지, 발음하기 어려운 단어를 피한다던지 하는 것들이다. 이렇게 규칙을 가지고 이름을 짓게 되면, 나중에 어떤 이름을 보아도 이게 사람 이름인지, 반려견 이름인지, 회사 이름인지 어느정도 구분이 가능하다.
프로그래밍의 세계에서 이름짓기도 마찬가지다. 우리는 이를 명명규칙이라고 하는데, 이름을 지을 때 공통적으로 지키는 규칙들을 이야기한다. 언어마다 일반적으로 가이드 되는 패턴들이 있고, 대부분 이에 맞춰서 사용하는 것을 추천한다.</description>
    </item>
    
  </channel>
</rss>